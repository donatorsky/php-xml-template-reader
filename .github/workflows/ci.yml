# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
  push:
    branches:
      - main

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    strategy:
      matrix:
        operating-system:
          - 'ubuntu-latest'
          - 'windows-latest'
          - 'macos-latest'

        php-version:
          - '7.4'
          - '8.0'

        dependencies:
          - 'lowest'
          - 'highest'

    runs-on: ${{ matrix.operating-system }}
    name: PHP ${{ matrix.php-version }} Test on ${{ matrix.operating-system }} with ${{ matrix.dependencies }} dependencies

    steps:
      - name: Configure git to avoid issues with line endings
        if: matrix.operating-system == 'windows-latest'
        run: git config --global core.autocrlf false

      - name: Checkout project files
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: xdebug
          tools: composer:v2

      - name: Validate composer.json
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2.1.5
        with:
          path: vendor
          key: php-${{ matrix.php-version }}-dependencies-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}

      - name: Install lowest dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true' && matrix.dependencies == 'lowest'
        run: composer update --no-interaction --no-ansi --no-progress --no-scripts --optimize-autoloader --classmap-authoritative --prefer-lowest

      - name: Install highest dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true' && matrix.dependencies == 'highest'
        run: composer update --no-interaction --no-ansi --no-progress --no-scripts --optimize-autoloader --classmap-authoritative

      - name: Check Code Style
        run: composer lint:cs:check-all

      - name: Run static analysis
        run: composer lint:stan:analyse

      - name: Run Unit tests
        run: composer lint:test:unit
